do
	-- Gui to Lua

	local Choose = Instance.new("ScreenGui")
	local ImageButton = Instance.new("ImageButton")
	local ModeTexts = Instance.new("TextLabel")
	local AutoFitMode = Instance.new("UITextSizeConstraint")
	local ItemsImage = Instance.new('StringValue')
	local FarmImage = Instance.new('StringValue')

	--Properties:

	Choose.Name = "Choose"
	Choose.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	Choose.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Choose.ResetOnSpawn = false

	ImageButton.Parent = Choose
	ImageButton.Active = true
	ImageButton.AnchorPoint = Vector2.new(0.5, 1)
	ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageButton.BackgroundTransparency = 1.000
	ImageButton.Position = UDim2.new(0.5, 0, 1, 0)
	ImageButton.Size = UDim2.new(0.1, 0, 0.0483936593, 0)
	ImageButton.Image = "rbxassetid://10518145166"

	ModeTexts.Name = "ModeTexts"
	ModeTexts.Parent = ImageButton
	ModeTexts.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ModeTexts.BackgroundTransparency = 1.000
	ModeTexts.Size = UDim2.new(0, 108, 0, 24)
	ModeTexts.Font = Enum.Font.SourceSans
	ModeTexts.Text = "Auto Items"
	ModeTexts.TextColor3 = Color3.fromRGB(0, 0, 0)
	ModeTexts.TextScaled = true
	ModeTexts.TextSize = 14.000
	ModeTexts.TextWrapped = true
	ModeTexts.Active = false

	AutoFitMode.Name = "AutoFitMode"
	AutoFitMode.Parent = ModeTexts
	AutoFitMode.MaxTextSize = 14

	ItemsImage.Name = 'ItemsImage'
	ItemsImage.Value = 'rbxassetid://10518145166'

	FarmImage.Name = 'FarmImage'
	ItemsImage.Value = 'rbxassetid://4688175775'

	
	
	--[[local function readfile(Name)

	end

	local function makefolder(Name)

	end

	local function writefile(Name,Value)

	end]]
	
	local queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport) or nil

	local IsHaveSet,Mode = pcall(function()
		return readfile('dfgvbbt\\Rainbow Friends.lua')
	end)
	print(Mode)
	if IsHaveSet == false then
		makefolder('dfgvbbt')
		writefile('dfgvbbt\\Rainbow Friends.lua','Items')
		Mode = 'Items'
		ModeTexts.Text = 'Auto '..Mode
	else
		if Mode == 'Items' or Mode == 'Farm' then
			ModeTexts.Text = 'Auto '..Mode
		else
			writefile('dfgvbbt\\Rainbow Friends.lua','Items')
		end
	end
	
	game.Players.LocalPlayer.OnTeleport:Connect(function(state)
		if state.Value == Enum.TeleportState.Started then
			if Mode == 'Farm' and queueteleport ~= nil then
				print('Player Teleporting!')
				queueteleport("loadstring(game:HttpGet('https://github.com/dfgvbbt/another/raw/main/Rainbow%20Friends'))()")
			end
		end
	end)
	
	ImageButton.MouseButton1Up:Connect(function()
		if Mode == 'Items' then
			Mode = 'Farm'
			ModeTexts.Text = 'Auto '..Mode
			ImageButton.Image = FarmImage.Value
			writefile('dfgvbbt\\Rainbow Friends.lua','Farm')
		elseif Mode == 'Farm' then
			Mode = 'Items'
			ModeTexts.Text = 'Auto '..Mode
			ImageButton.Image = ItemsImage.Value
			writefile('dfgvbbt\\Rainbow Friends.lua','Items')
			if Mode == 'Farm' and game.PlaceId == 7991339063 then
				repeat
					game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').CFrame = workspace.testblock.CFrame
					task.wait(.5)
				until Mode == 'Items'
			end
		end
	end)
end


local All_Items_Name = {
	['Block'] = true,
	['Food'] = true,
	['Fuse'] = true,
	['Battery'] = true,
}
print('Thanks!')

game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").WalkSpeed = 25

game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid'):GetPropertyChangedSignal('WalkSpeed'):Connect(function()
	if game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid').WalkSpeed < 25  then
		game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid').WalkSpeed = 25
	end
end)
--Block.TouchTrigger.TouchInterest
--workspace.GroupBuildStructures.BlockTower.Trigger.TouchInterest
local firetouchinterest

do
	local GEnv = getgenv();
	local touched
	firetouchinterest = GEnv.firetouchinterest or function(part1, part2, toggle)
		if (part1 and part2) then
			if (toggle == 0) then
				touched = part1.CFrame
				part1.CFrame = part2.CFrame
			else
				part1.CFrame = touched
				touched = nil
			end
		end
	end
end

local CurrentMode = ''

local function FireAll()
	for i, v:Instance in pairs(workspace:GetDescendants()) do
		if v:IsA('TouchTransmitter') then
			firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart'), v.Parent, 0);
			wait();
			firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart'), v.Parent, 1);
		end
	end
end

local function Doing(child:Instance,ThisMode:string)
	if CurrentMode == ThisMode then
		return ThisMode
	end

	CurrentMode = ThisMode
	local AmoutLoop = 0
	repeat
		AmoutLoop += 1
		local IsHave,_ = pcall(function()
			loadstring('return workspace.'..child.Name)()
		end)
		print(IsHave)
		print(child:GetFullName())
		FireAll()
		wait()
		if AmoutLoop >= 10 then AmoutLoop = 0 break end
		if IsHave == false or CurrentMode == '' then print('break!') break end
		print('Not yet :(')
	until IsHave == false
	print('Yet!')
	local l:Instance = workspace.GroupBuildStructures:FindFirstChildWhichIsA('Model'):WaitForChild('Trigger')
	firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart'),l,0)
	wait();
	firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart'),l,1)
	CurrentMode = ''
end


workspace.ChildAdded:Connect(function(child)
	if child.Name == 'Purple_ArmIdle' then wait() return child:Destroy() end
	if child:IsA('Model') then
		if All_Items_Name[child.Name] ~= nil then
			Doing(child,child.Name)
		else
			if child.Name == 'Map_Finale' then
				FireAll()
			end
			for Name,v in pairs(All_Items_Name) do
				if string.match(child.Name,Name) then
					Doing(child,Name)
				end
			end
		end

	end
end)

pcall(function()
	workspace.Map_Finale.BalloonObstacles:FindFirstChildWhichIsA('MeshPart').ChildAdded:Connect(function(child)
		task.wait(0.1)
		FireAll() --Just poop ballons :)
	end)
end)

